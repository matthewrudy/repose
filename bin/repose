#!/usr/bin/env ruby
# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility
unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end

$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')
require 'rubygems'
require 'gli'
require 'repose'

include GLI

Repose::VERSION

program_desc 'Describe your application here'

version Repose::VERSION

def read_reposefile
  File.read("Reposefile")
end

def load_definition
  Repose.from_file(File.open("Reposefile"))
end

desc 'Display your current config'
command :config do |c|
  c.action do |global_options, options, args|
    puts File.read("Reposefile")
  end
end

desc 'Create a new Reposefile'
arg_name 'Describe arguments to init here'
command :init do |c|
  c.action do |global_options, options, args|
    if File.exist?("Reposefile")
      warn "Reposefile already exists"
    else
      Repose::Generator.create_blank("Reposefile")
    end
  end
end

desc 'Describe install here'
arg_name 'Describe arguments to install here'
command :install do |c|
  c.action do |global_options, options, args|
    definition = load_definition
    definition.install(".")
  end
end

desc 'Describe update here'
arg_name 'Describe arguments to update here'
command :update do |c|
  c.action do |global_options,options,args|
  end
end

# pre do |global,command,options,args|
#   # Pre logic here
#   # Return true to proceed; false to abourt and not call the
#   # chosen command
#   # Use skips_pre before a command to skip this block
#   # on that command only
#   true
# end
# 
# post do |global,command,options,args|
#   # Post logic here
#   # Use skips_post before a command to skip this
#   # block on that command only
# end
# 
# on_error do |exception|
#   # Error logic here
#   # return false to skip default error handling
#   true
# end

exit GLI.run(ARGV)
